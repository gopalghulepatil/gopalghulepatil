Skip to content
Search or jump to…
Pull requests
Issues
Marketplace
Explore
 
@gopalghulepatil 
gopalghulepatil
/
gopalghulepatil
Public
Code
Pull requests
Actions
Projects
Security
Insights
Settings
gopalghulepatil/gopalDatabase
@gopalghulepatil
gopalghulepatil Create gopalDatabase
Latest commit 1beaf2e on Jan 21
 History
 1 contributor
175 lines (162 sloc)  6.51 KB
   
import java.util.Scanner;
import java.sql.*;
public class MyClass {

	public static void main(String[] args) {
		int choice;
		Scanner sc= new Scanner(System.in);
		MyClass db =new MyClass();
		int stdId,stdAge;
		String stdName,stdCity;
		do
		{
			System.out.println("Sql Curd Operations (Enter a number to proceed).");
			System.out.println("1. Insert Student Details");
			System.out.println("2. Retrive Student Detail");
			System.out.println("3. Delete Student Detail");
			System.out.println("4. Update Student Detail");
			System.out.println("5. Display Student Data");
			System.out.println("6. Exit");
			choice=sc.nextInt();
			switch(choice)
			{
			case 1:
				sc.nextLine();
				System.out.println("Enter Student Details");
				System.out.println("Name:");
				stdName=sc.nextLine();
				System.out.println("Age:");
				stdAge=sc.nextInt();
				sc.nextLine();
				System.out.println("City:");
				stdCity=sc.nextLine();
				db.InsertStudentDetail(stdName, stdAge, stdCity);
				break;
			case 2:
				db.RetriveAllStudentDetails();
				break;
			case 3:
				sc.nextLine();
				System.out.println("Enter the StudentID which you want to delete");
				stdId=sc.nextInt();
				db.DeleteStudentDetail(stdId);
				break;
			case 4: 
				sc.nextLine();
				System.out.println("Enter the StudentID whose data you want to update");
				stdId=sc.nextInt();
				sc.nextLine();
				System.out.println("Enter Student Details");
				System.out.println("Name:");
				stdName=sc.nextLine();
				System.out.println("Age:");
				stdAge=sc.nextInt();
				sc.nextLine();
				System.out.println("City:");
				stdCity=sc.nextLine();
				db.UpdateStudentDetail(stdId, stdName, stdAge, stdCity);
				break;
			case 5:
				sc.nextLine();
				System.out.println("Enter the StudentID whose data you want to retrive");
				stdId=sc.nextInt();
				sc.nextLine();
				db.RetriveStudentDetail(stdId);
				break;
			case 6:
				System.out.println("Exiting..... :)");
				break;
			default :
				System.out.println("Invalid Choice");
			}
			
		}while(choice!=6);
		sc.close();
	}

	void RetriveAllStudentDetails() {
		   try {
			   Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/MyDatabase", "root", "Pass@711");
			   System.out.println("Connected With the database successfully");
			           PreparedStatement preparedStatement=connection.prepareStatement("select * from student");
			           ResultSet resultSet=preparedStatement.executeQuery();
			           if(resultSet.next()== false)
			           {
			        	   System.out.println("No Record Found");
			           }else {
			        	   do{
				                int std_id=resultSet.getInt("std_id");
				                String std_name=resultSet.getString("std_name");
				                int std_age=resultSet.getInt("std_age");
				                String std_city=resultSet.getString("std_city");
				                
				                System.out.println("\n"+std_id+" "+std_name+" "+std_age+" "+std_city+"\n");
				           }while(resultSet.next());
			           }
			           
			   } catch (SQLException e) {
				   	    System.out.println("Error while connecting to the database");
			   }
	}
	void RetriveStudentDetail(int id) {
		   try {
			   Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/MyDatabase", "root", "Pass@711");
			   System.out.println("Connected With the database successfully");
			           PreparedStatement preparedStatement=connection.prepareStatement("select * from student where std_id=?");
			           preparedStatement.setInt(1,id);
			           ResultSet resultSet=preparedStatement.executeQuery();
			           if(resultSet.next()== false)
			           {
			        	   System.out.println("No Record Found");
			           }else {
			        	   do{
				                int std_id=resultSet.getInt("std_id");
				                String std_name=resultSet.getString("std_name");
				                int std_age=resultSet.getInt("std_age");
				                String std_city=resultSet.getString("std_city");
				             
				                System.out.println("\n"+std_id+" "+std_name+" "+std_age+" "+std_city+" "+"\n");
				           }while(resultSet.next());
			           }
			           
			   } catch (SQLException e) {
				   	    System.out.println("Error while connecting to the database");
			   }
	}
	
	void InsertStudentDetail(String std_name,int std_age,String std_city)
	{
		  try {
			  	
			  			Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/MyDatabase", "root", "Pass@711");
			  			System.out.println("Connected With the database successfully");
			  			PreparedStatement preparedStatement=connection.prepareStatement("insert into student(std_name,std_age,std_city) values(?,?,?)");
			  			preparedStatement.setString(1,std_name);
			  			preparedStatement.setInt(2,std_age);
			  			preparedStatement.setString(3,std_city);
			            preparedStatement.executeUpdate();
			            System.out.println("data inserted successfully");
			  } catch (SQLException e) {
				  		System.out.println("Error while connecting to the database");
			  }
	}
	void DeleteStudentDetail(int std_id) {
		  try {
			  		  Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/MyDatabase", "root", "Pass@711");
			  		  System.out.println("Connected With the database successfully");
			          PreparedStatement preparedStatement=connection.prepareStatement("delete from student where std_id=?");
			          preparedStatement.setInt(1,std_id);
			          preparedStatement.executeUpdate();
			          System.out.println("Data deleted Successfully");
			  } catch (SQLException e) {
				  	  System.out.println("Error while connecting to the database");
			  }
	}
	  void UpdateStudentDetail(int std_id,String std_name,int std_age,String std_city)
	  {
		  try {
				Connection	 connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/MyDatabase", "root", "Pass@711");
				System.out.println("Connected With the database successfully");
		        PreparedStatement preparedStatement=connection.prepareStatement("update student set std_name=?,std_age=?,std_city=? where std_id=?");
		        preparedStatement.setString(1,std_name);
		        preparedStatement.setInt(2,std_age);
		        preparedStatement.setString(3,std_city);
		        preparedStatement.setInt(4,std_id);
		        preparedStatement.executeUpdate();
		        System.out.println("data updated successfully");
				
				
			} catch (SQLException e) {
				
				System.out.println("Error while connecting to the database");
			
					}
	  }
}
© 2022 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
Loading complete
